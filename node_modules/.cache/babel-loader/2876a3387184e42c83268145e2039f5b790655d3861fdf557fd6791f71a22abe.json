{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Alert,Button,Card,CardContent,CardMedia,Typography}from'@mui/material';import{Box}from'@mui/system';import{green,red,grey}from'@mui/material/colors';import Answer from'./Answer';import{createAPIEndpoint,ENDPOINTS}from'../api';import{getFormatedTime}from'../helper';import useStateContext from'../Hooks/UseStateContext';import{useNavigate}from'react-router';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Result(){const{context,setContext}=useStateContext();const[score,setScore]=useState(0);const[qnAnswers,setQnAnswers]=useState([]);const[showAlert,setShowAlert]=useState(false);const navigate=useNavigate();useEffect(()=>{const ids=context.selectedOptions.map(x=>x.qnId);createAPIEndpoint(ENDPOINTS.getAnswers).post(ids).then(res=>{const qna=context.selectedOptions.map(selectedQn=>{const answerData=res.data.find(answer=>answer.qnId===selectedQn.qnId);return{...selectedQn,...answerData};});setQnAnswers(qna);calculateScore(qna);}).catch(err=>console.log(err));},[context.selectedOptions]);const calculateScore=qna=>{let tempScore=qna.reduce((acc,curr)=>{// Convert answer and selected to integers for comparison\nconst answer=parseInt(curr.answer);const selected=parseInt(curr.selected);// Compare answer and selected\nif(answer===selected||selected===null){return acc+1;// Correct answer or skipped question\n}else{return acc;// Incorrect answer\n}},0);setScore(tempScore);};// Calculate the maximum score based on the number of questions answered\nconst maxScore=context.selectedOptions.length;const restart=()=>{setContext({timeTaken:0,selectedOptions:[]// Reset selectedOptions state\n});navigate(\"/question\");};const submitScore=()=>{createAPIEndpoint(ENDPOINTS.participant).put(context.participantId,{participantId:context.participantId,score:score,timeTaken:context.timeTaken}).then(res=>{setShowAlert(true);setTimeout(()=>{setShowAlert(false);},4000);}).catch(err=>{console.log(err);});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Card,{sx:{mt:5,display:'flex',width:'100%',maxWidth:640,mx:'auto'},children:[/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexDirection:'column',flexGrow:1},children:/*#__PURE__*/_jsxs(CardContent,{sx:{flex:'1 0 auto',textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:\"Test Completed!\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"YOUR SCORE\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",sx:{fontWeight:600},children:[/*#__PURE__*/_jsx(Typography,{variant:\"span\",color:green[500],children:score}),\"/\",maxScore]}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Took \",getFormatedTime(context.timeTaken)+' mins']}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",sx:{mx:1},size:\"small\",onClick:restart,children:\"Re-try\"}),/*#__PURE__*/_jsx(Alert,{severity:\"success\",variant:\"string\",sx:{width:'60%',m:'auto',visibility:showAlert?'visible':'hidden'},children:\"Score Updated.\"})]})}),/*#__PURE__*/_jsx(CardMedia,{component:\"img\",sx:{width:220},image:\"./result.png\"})]}),/*#__PURE__*/_jsx(Answer,{qnAnswers:qnAnswers})]});}","map":{"version":3,"names":["React","useEffect","useState","Alert","Button","Card","CardContent","CardMedia","Typography","Box","green","red","grey","Answer","createAPIEndpoint","ENDPOINTS","getFormatedTime","useStateContext","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Result","context","setContext","score","setScore","qnAnswers","setQnAnswers","showAlert","setShowAlert","navigate","ids","selectedOptions","map","x","qnId","getAnswers","post","then","res","qna","selectedQn","answerData","data","find","answer","calculateScore","catch","err","console","log","tempScore","reduce","acc","curr","parseInt","selected","maxScore","length","restart","timeTaken","submitScore","participant","put","participantId","setTimeout","children","sx","mt","display","width","maxWidth","mx","flexDirection","flexGrow","flex","textAlign","variant","fontWeight","color","size","onClick","severity","m","visibility","component","image"],"sources":["C:/Unilinker_frontend/src/Components/Result.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Alert, Button, Card, CardContent, CardMedia, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { green, red, grey } from '@mui/material/colors';\r\nimport Answer from './Answer';\r\nimport { createAPIEndpoint, ENDPOINTS } from '../api';\r\nimport { getFormatedTime } from '../helper';\r\nimport useStateContext from '../Hooks/UseStateContext';\r\nimport { useNavigate } from 'react-router';\r\n\r\nexport default function Result() {\r\n    const { context, setContext } = useStateContext();\r\n    const [score, setScore] = useState(0);\r\n    const [qnAnswers, setQnAnswers] = useState([]);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const ids = context.selectedOptions.map(x => x.qnId);\r\n        createAPIEndpoint(ENDPOINTS.getAnswers)\r\n            .post(ids)\r\n            .then(res => {\r\n                const qna = context.selectedOptions.map(selectedQn => {\r\n                    const answerData = res.data.find(answer => answer.qnId === selectedQn.qnId);\r\n                    return {\r\n                        ...selectedQn,\r\n                        ...answerData\r\n                    };\r\n                });\r\n                setQnAnswers(qna);\r\n                calculateScore(qna);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [context.selectedOptions]);\r\n\r\n    const calculateScore = qna => {\r\n      let tempScore = qna.reduce((acc, curr) => {\r\n          // Convert answer and selected to integers for comparison\r\n          const answer = parseInt(curr.answer);\r\n          const selected = parseInt(curr.selected);\r\n          // Compare answer and selected\r\n          if (answer === selected || selected === null) {\r\n              return acc + 1; // Correct answer or skipped question\r\n          } else {\r\n              return acc; // Incorrect answer\r\n          }\r\n      }, 0);\r\n      setScore(tempScore);\r\n  };\r\n        // Calculate the maximum score based on the number of questions answered\r\n    const maxScore = context.selectedOptions.length;\r\n\r\n    const restart = () => {\r\n        setContext({\r\n            timeTaken: 0,\r\n            selectedOptions: [] // Reset selectedOptions state\r\n        });\r\n        navigate(\"/question\");\r\n    };\r\n\r\n    const submitScore = () => {\r\n        createAPIEndpoint(ENDPOINTS.participant)\r\n            .put(context.participantId, {\r\n                participantId: context.participantId,\r\n                score: score,\r\n                timeTaken: context.timeTaken\r\n            })\r\n            .then(res => {\r\n                setShowAlert(true);\r\n                setTimeout(() => {\r\n                    setShowAlert(false);\r\n                }, 4000);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card sx={{ mt: 5, display: 'flex', width: '100%', maxWidth: 640, mx: 'auto' }}>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', flexGrow: 1 }}>\r\n                    <CardContent sx={{ flex: '1 0 auto', textAlign: 'center' }}>\r\n                        <Typography variant=\"h4\">Test Completed!</Typography>\r\n                        <Typography variant=\"h6\">YOUR SCORE</Typography>\r\n                        <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\r\n                            <Typography variant=\"span\" color={green[500]}>\r\n                                {score}\r\n                            </Typography>/{maxScore}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">Took {getFormatedTime(context.timeTaken) + ' mins'}</Typography>\r\n\r\n                        <Button variant=\"contained\" sx={{ mx: 1 }} size=\"small\" onClick={restart}>\r\n                            Re-try\r\n                        </Button>\r\n                        <Alert\r\n                            severity=\"success\"\r\n                            variant=\"string\"\r\n                            sx={{\r\n                                width: '60%',\r\n                                m: 'auto',\r\n                                visibility: showAlert ? 'visible' : 'hidden'\r\n                            }}\r\n                        >\r\n                            Score Updated.\r\n                        </Alert>\r\n                    </CardContent>\r\n                </Box>\r\n                <CardMedia component=\"img\" sx={{ width: 220 }} image=\"./result.png\" />\r\n            </Card>\r\n            <Answer qnAnswers={qnAnswers} />\r\n        </>\r\n    );\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,KAAK,CAAEC,MAAM,CAAEC,IAAI,CAAEC,WAAW,CAAEC,SAAS,CAAEC,UAAU,KAAQ,eAAe,CACvF,OAASC,GAAG,KAAQ,aAAa,CACjC,OAASC,KAAK,CAAEC,GAAG,CAAEC,IAAI,KAAQ,sBAAsB,CACvD,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,OAASC,iBAAiB,CAAEC,SAAS,KAAQ,QAAQ,CACrD,OAASC,eAAe,KAAQ,WAAW,CAC3C,MAAO,CAAAC,eAAe,KAAM,0BAA0B,CACtD,OAASC,WAAW,KAAQ,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE3C,cAAe,SAAS,CAAAC,MAAMA,CAAA,CAAG,CAC7B,KAAM,CAAEC,OAAO,CAAEC,UAAW,CAAC,CAAGV,eAAe,CAAC,CAAC,CACjD,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAG3B,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAAC4B,SAAS,CAAEC,YAAY,CAAC,CAAG7B,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAAC8B,SAAS,CAAEC,YAAY,CAAC,CAAG/B,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAAgC,QAAQ,CAAGhB,WAAW,CAAC,CAAC,CAE9BjB,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAkC,GAAG,CAAGT,OAAO,CAACU,eAAe,CAACC,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACC,IAAI,CAAC,CACpDzB,iBAAiB,CAACC,SAAS,CAACyB,UAAU,CAAC,CAClCC,IAAI,CAACN,GAAG,CAAC,CACTO,IAAI,CAACC,GAAG,EAAI,CACT,KAAM,CAAAC,GAAG,CAAGlB,OAAO,CAACU,eAAe,CAACC,GAAG,CAACQ,UAAU,EAAI,CAClD,KAAM,CAAAC,UAAU,CAAGH,GAAG,CAACI,IAAI,CAACC,IAAI,CAACC,MAAM,EAAIA,MAAM,CAACV,IAAI,GAAKM,UAAU,CAACN,IAAI,CAAC,CAC3E,MAAO,CACH,GAAGM,UAAU,CACb,GAAGC,UACP,CAAC,CACL,CAAC,CAAC,CACFf,YAAY,CAACa,GAAG,CAAC,CACjBM,cAAc,CAACN,GAAG,CAAC,CACvB,CAAC,CAAC,CACDO,KAAK,CAACC,GAAG,EAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC,CACvC,CAAC,CAAE,CAAC1B,OAAO,CAACU,eAAe,CAAC,CAAC,CAE7B,KAAM,CAAAc,cAAc,CAAGN,GAAG,EAAI,CAC5B,GAAI,CAAAW,SAAS,CAAGX,GAAG,CAACY,MAAM,CAAC,CAACC,GAAG,CAAEC,IAAI,GAAK,CACtC;AACA,KAAM,CAAAT,MAAM,CAAGU,QAAQ,CAACD,IAAI,CAACT,MAAM,CAAC,CACpC,KAAM,CAAAW,QAAQ,CAAGD,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC,CACxC;AACA,GAAIX,MAAM,GAAKW,QAAQ,EAAIA,QAAQ,GAAK,IAAI,CAAE,CAC1C,MAAO,CAAAH,GAAG,CAAG,CAAC,CAAE;AACpB,CAAC,IAAM,CACH,MAAO,CAAAA,GAAG,CAAE;AAChB,CACJ,CAAC,CAAE,CAAC,CAAC,CACL5B,QAAQ,CAAC0B,SAAS,CAAC,CACvB,CAAC,CACK;AACJ,KAAM,CAAAM,QAAQ,CAAGnC,OAAO,CAACU,eAAe,CAAC0B,MAAM,CAE/C,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAClBpC,UAAU,CAAC,CACPqC,SAAS,CAAE,CAAC,CACZ5B,eAAe,CAAE,EAAG;AACxB,CAAC,CAAC,CACFF,QAAQ,CAAC,WAAW,CAAC,CACzB,CAAC,CAED,KAAM,CAAA+B,WAAW,CAAGA,CAAA,GAAM,CACtBnD,iBAAiB,CAACC,SAAS,CAACmD,WAAW,CAAC,CACnCC,GAAG,CAACzC,OAAO,CAAC0C,aAAa,CAAE,CACxBA,aAAa,CAAE1C,OAAO,CAAC0C,aAAa,CACpCxC,KAAK,CAAEA,KAAK,CACZoC,SAAS,CAAEtC,OAAO,CAACsC,SACvB,CAAC,CAAC,CACDtB,IAAI,CAACC,GAAG,EAAI,CACTV,YAAY,CAAC,IAAI,CAAC,CAClBoC,UAAU,CAAC,IAAM,CACbpC,YAAY,CAAC,KAAK,CAAC,CACvB,CAAC,CAAE,IAAI,CAAC,CACZ,CAAC,CAAC,CACDkB,KAAK,CAACC,GAAG,EAAI,CACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CACpB,CAAC,CAAC,CACV,CAAC,CAED,mBACI9B,KAAA,CAAAE,SAAA,EAAA8C,QAAA,eACIhD,KAAA,CAACjB,IAAI,EAACkE,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAC,CAAEC,OAAO,CAAE,MAAM,CAAEC,KAAK,CAAE,MAAM,CAAEC,QAAQ,CAAE,GAAG,CAAEC,EAAE,CAAE,MAAO,CAAE,CAAAN,QAAA,eAC3ElD,IAAA,CAACX,GAAG,EAAC8D,EAAE,CAAE,CAAEE,OAAO,CAAE,MAAM,CAAEI,aAAa,CAAE,QAAQ,CAAEC,QAAQ,CAAE,CAAE,CAAE,CAAAR,QAAA,cAC/DhD,KAAA,CAAChB,WAAW,EAACiE,EAAE,CAAE,CAAEQ,IAAI,CAAE,UAAU,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAV,QAAA,eACvDlD,IAAA,CAACZ,UAAU,EAACyE,OAAO,CAAC,IAAI,CAAAX,QAAA,CAAC,iBAAe,CAAY,CAAC,cACrDlD,IAAA,CAACZ,UAAU,EAACyE,OAAO,CAAC,IAAI,CAAAX,QAAA,CAAC,YAAU,CAAY,CAAC,cAChDhD,KAAA,CAACd,UAAU,EAACyE,OAAO,CAAC,IAAI,CAACV,EAAE,CAAE,CAAEW,UAAU,CAAE,GAAI,CAAE,CAAAZ,QAAA,eAC7ClD,IAAA,CAACZ,UAAU,EAACyE,OAAO,CAAC,MAAM,CAACE,KAAK,CAAEzE,KAAK,CAAC,GAAG,CAAE,CAAA4D,QAAA,CACxC1C,KAAK,CACE,CAAC,IAAC,CAACiC,QAAQ,EACf,CAAC,cACbvC,KAAA,CAACd,UAAU,EAACyE,OAAO,CAAC,IAAI,CAAAX,QAAA,EAAC,OAAK,CAACtD,eAAe,CAACU,OAAO,CAACsC,SAAS,CAAC,CAAG,OAAO,EAAa,CAAC,cAEzF5C,IAAA,CAAChB,MAAM,EAAC6E,OAAO,CAAC,WAAW,CAACV,EAAE,CAAE,CAAEK,EAAE,CAAE,CAAE,CAAE,CAACQ,IAAI,CAAC,OAAO,CAACC,OAAO,CAAEtB,OAAQ,CAAAO,QAAA,CAAC,QAE1E,CAAQ,CAAC,cACTlD,IAAA,CAACjB,KAAK,EACFmF,QAAQ,CAAC,SAAS,CAClBL,OAAO,CAAC,QAAQ,CAChBV,EAAE,CAAE,CACAG,KAAK,CAAE,KAAK,CACZa,CAAC,CAAE,MAAM,CACTC,UAAU,CAAExD,SAAS,CAAG,SAAS,CAAG,QACxC,CAAE,CAAAsC,QAAA,CACL,gBAED,CAAO,CAAC,EACC,CAAC,CACb,CAAC,cACNlD,IAAA,CAACb,SAAS,EAACkF,SAAS,CAAC,KAAK,CAAClB,EAAE,CAAE,CAAEG,KAAK,CAAE,GAAI,CAAE,CAACgB,KAAK,CAAC,cAAc,CAAE,CAAC,EACpE,CAAC,cACPtE,IAAA,CAACP,MAAM,EAACiB,SAAS,CAAEA,SAAU,CAAE,CAAC,EAClC,CAAC,CAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}