{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BASE_URL}from'../api';import useStateContext from'../Hooks/UseStateContext';import{Card,CardContent,CardMedia,CardHeader,List,ListItemButton,Typography,Box,LinearProgress,FormControl,FormGroup,FormControlLabel,Checkbox,Button,TextField,Container}from'@mui/material';import{getFormatedTime}from'../helper';import{useNavigate}from'react-router';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Quiz(){const[qns,setQns]=useState([]);const[qnIndex,setQnIndex]=useState(0);const[timeTaken,setTimeTaken]=useState(0);const{context,setContext}=useStateContext();const navigate=useNavigate();const[categories,setCategories]=useState([{id:'1',name:'English',checked:false},{id:'2',name:'IQ',checked:false},{id:'3',name:'Basic Math',checked:false},{id:'4',name:'Advance Math',checked:false},{id:'5',name:'Bio',checked:false},{id:'6',name:'Chemistry',checked:false},{id:'7',name:'Physics',checked:false}]);const[questionCount,setQuestionCount]=useState(5);const[formSubmitted,setFormSubmitted]=useState(false);let timer;const startTimer=()=>{clearInterval(timer);// Clear any existing timer\ntimer=setInterval(()=>{setTimeTaken(prev=>prev+1);},1000);};const fetchQuestions=()=>{const selectedCategories=categories.filter(cat=>cat.checked).map(cat=>cat.id);const isAllChecked=categories.some(cat=>cat.name==='All'&&cat.checked);if(selectedCategories.length===0||isAllChecked){fetch(\"\".concat(BASE_URL,\"/api/Question/GetAll?count=\").concat(questionCount)).then(response=>{if(!response.ok){throw new Error('Network response was not ok');}return response.json();}).then(data=>{if(data.length!==questionCount){console.error('The number of questions fetched does not match the expected count');}setQns(data);startTimer();}).catch(error=>{console.error('There was a problem with your fetch operation:',error);});}else{const url=\"\".concat(BASE_URL,\"/api/Question?CategoryIds=\").concat(selectedCategories.join('&CategoryIds='),\"&Count=\").concat(questionCount);fetch(url).then(response=>{if(!response.ok){throw new Error('Network response was not ok');}return response.json();}).then(data=>{if(data.length!==questionCount){console.error('The number of questions fetched does not match the expected count');}setQns(data);startTimer();}).catch(error=>{console.error('There was a problem with your fetch operation:',error);});}};useEffect(()=>{if(formSubmitted&&categories.length>0){fetchQuestions();}},[formSubmitted,categories]);const handleFormSubmit=async e=>{e.preventDefault();if(categories&&categories.length>0){setFormSubmitted(true);}else{console.error('Categories state is undefined or empty.');}};const handleCategoryChange=id=>{const updatedCategories=categories.map(cat=>cat.id===id?{...cat,checked:!cat.checked}:cat);setCategories(updatedCategories);};const handleQuestionCountChange=e=>{setQuestionCount(e.target.value);};const updateAnswer=(qnId,optionIdx)=>{const temp=[...context.selectedOptions];const index=temp.findIndex(item=>item.qnId===qnId);if(index!==-1){temp[index].selected=optionIdx;}else{temp.push({qnId,selected:optionIdx});}// Treat unanswered questions as incorrect when moving to the next question\nif(qnIndex<questionCount-1){var _temp$index;if(((_temp$index=temp[index])===null||_temp$index===void 0?void 0:_temp$index.selected)===null){// If the question is unanswered, mark it as incorrect\ntemp[index].selected=-1;}setContext({selectedOptions:[...temp]});setQnIndex(qnIndex+1);}else{// Add skipped questions to selectedOptions state\nfor(let i=qnIndex+1;i<questionCount;i++){temp.push({qnId:qns[i].qnId,selected:-1// Mark as unanswered\n});}setContext({selectedOptions:[...temp],timeTaken});navigate(\"/result\");}};const handleBack=()=>{if(qnIndex>0){setQnIndex(qnIndex-1);}};useEffect(()=>{setQns([]);setQnIndex(0);setFormSubmitted(false);setTimeTaken(0);setContext({participantId:0,timeTaken:0,selectedOptions:[]});},[]);return/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",align:\"center\",gutterBottom:true,children:\"Test Preparation\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",gutterBottom:true,children:\"Choose any category to prepare for your test.\"}),!formSubmitted?/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleFormSubmit,children:[/*#__PURE__*/_jsx(FormControl,{sx:{m:2},children:/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:categories.every(cat=>cat.checked),onChange:()=>{const allChecked=categories.every(cat=>cat.checked);const updatedCategories=categories.map(cat=>({...cat,checked:!allChecked}));setCategories(updatedCategories);}}),label:\"All\"}),categories.map(cat=>categories.length>0&&cat&&/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:cat.checked||false,onChange:()=>handleCategoryChange(cat.id),disabled:categories.every(c=>c&&c.id!==cat.id&&c.checked)}),label:cat.name},cat.id))]})}),/*#__PURE__*/_jsx(FormControl,{sx:{m:2},children:/*#__PURE__*/_jsx(TextField,{type:\"number\",label:\"Number of Questions\",value:questionCount,onChange:handleQuestionCountChange,inputProps:{min:1,max:100}})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",type:\"submit\",children:\"Submit\"})]}):null,qns.length!==0?/*#__PURE__*/_jsxs(Card,{sx:{maxWidth:640,mx:'auto',mt:5,'& .MuiCardHeader-action':{m:0,alignSelf:'center'}},children:[/*#__PURE__*/_jsx(CardHeader,{title:'Question '+(qnIndex+1)+' of '+questionCount,action:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleBack,disabled:qnIndex===0,children:\"Back\"}),/*#__PURE__*/_jsx(Typography,{children:getFormatedTime(timeTaken)})]})}),/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:(qnIndex+1)*100/questionCount})}),qns[qnIndex].imageName!=null?/*#__PURE__*/_jsx(CardMedia,{component:\"img\",image:BASE_URL+'Images/'+qns[qnIndex].imageName,sx:{width:'auto',m:'10px auto'}}):null,/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:qns[qnIndex].qnInWords}),/*#__PURE__*/_jsx(List,{children:qns[qnIndex].options&&qns[qnIndex].options.map((item,idx)=>/*#__PURE__*/_jsx(ListItemButton,{disableRipple:true,onClick:()=>updateAnswer(qns[qnIndex].qnId,idx),sx:{backgroundColor:context.selectedOptions.find(option=>option.qnId===qns[qnIndex].qnId&&option.selected===idx)?'#3399FF':'transparent'},children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:String.fromCharCode(65+idx)+\" . \"}),item]})},idx))})]})]}):null]});}","map":{"version":3,"names":["React","useState","useEffect","BASE_URL","useStateContext","Card","CardContent","CardMedia","CardHeader","List","ListItemButton","Typography","Box","LinearProgress","FormControl","FormGroup","FormControlLabel","Checkbox","Button","TextField","Container","getFormatedTime","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Quiz","qns","setQns","qnIndex","setQnIndex","timeTaken","setTimeTaken","context","setContext","navigate","categories","setCategories","id","name","checked","questionCount","setQuestionCount","formSubmitted","setFormSubmitted","timer","startTimer","clearInterval","setInterval","prev","fetchQuestions","selectedCategories","filter","cat","map","isAllChecked","some","length","fetch","concat","then","response","ok","Error","json","data","console","error","catch","url","join","handleFormSubmit","e","preventDefault","handleCategoryChange","updatedCategories","handleQuestionCountChange","target","value","updateAnswer","qnId","optionIdx","temp","selectedOptions","index","findIndex","item","selected","push","_temp$index","i","handleBack","participantId","maxWidth","children","variant","align","gutterBottom","onSubmit","sx","m","control","every","onChange","allChecked","label","disabled","c","type","inputProps","min","max","mx","mt","alignSelf","title","action","onClick","imageName","component","image","width","qnInWords","options","idx","disableRipple","backgroundColor","find","option","String","fromCharCode"],"sources":["C:/Unilinker_frontend/src/Components/Question.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BASE_URL } from '../api';\r\nimport useStateContext from '../Hooks/UseStateContext';\r\nimport { Card, CardContent, CardMedia, CardHeader, List, ListItemButton, Typography, Box, LinearProgress, FormControl, FormGroup, FormControlLabel, Checkbox, Button, TextField, Container } from '@mui/material';\r\nimport { getFormatedTime } from '../helper';\r\nimport { useNavigate } from 'react-router';\r\n\r\nexport default function Quiz() {\r\n    const [qns, setQns] = useState([]);\r\n    const [qnIndex, setQnIndex] = useState(0);\r\n    const [timeTaken, setTimeTaken] = useState(0);\r\n    const { context, setContext } = useStateContext();\r\n    const navigate = useNavigate();\r\n    const [categories, setCategories] = useState([\r\n        { id: '1', name: 'English', checked: false },\r\n        { id: '2', name: 'IQ', checked: false },\r\n        { id: '3', name: 'Basic Math', checked: false },\r\n        { id: '4', name: 'Advance Math', checked: false },\r\n        { id: '5', name: 'Bio', checked: false },\r\n        { id: '6', name: 'Chemistry', checked: false },\r\n        { id: '7', name: 'Physics', checked: false },\r\n    ]);\r\n    const [questionCount, setQuestionCount] = useState(5);\r\n    const [formSubmitted, setFormSubmitted] = useState(false);\r\n\r\n    let timer;\r\n\r\n    const startTimer = () => {\r\n        clearInterval(timer); // Clear any existing timer\r\n        timer = setInterval(() => {\r\n            setTimeTaken(prev => prev + 1);\r\n        }, 1000);\r\n    };\r\n\r\n    const fetchQuestions = () => {\r\n        const selectedCategories = categories.filter(cat => cat.checked).map(cat => cat.id);\r\n        const isAllChecked = categories.some(cat => cat.name === 'All' && cat.checked);\r\n\r\n        if (selectedCategories.length === 0 || isAllChecked) {\r\n            fetch(`${BASE_URL}/api/Question/GetAll?count=${questionCount}`)\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error('Network response was not ok');\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    if (data.length !== questionCount) {\r\n                        console.error('The number of questions fetched does not match the expected count');\r\n                    }\r\n                    setQns(data);\r\n                    startTimer();\r\n                })\r\n                .catch(error => {\r\n                    console.error('There was a problem with your fetch operation:', error);\r\n                });\r\n        } else {\r\n            const url = `${BASE_URL}/api/Question?CategoryIds=${selectedCategories.join('&CategoryIds=')}&Count=${questionCount}`;\r\n            fetch(url)\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error('Network response was not ok');\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    if (data.length !== questionCount) {\r\n                        console.error('The number of questions fetched does not match the expected count');\r\n                    }\r\n                    setQns(data);\r\n                    startTimer();\r\n                })\r\n                .catch(error => {\r\n                    console.error('There was a problem with your fetch operation:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (formSubmitted && categories.length > 0) {\r\n            fetchQuestions();\r\n        }\r\n    }, [formSubmitted, categories]);\r\n\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (categories && categories.length > 0) {\r\n            setFormSubmitted(true);\r\n        } else {\r\n            console.error('Categories state is undefined or empty.');\r\n        }\r\n    };\r\n\r\n    const handleCategoryChange = (id) => {\r\n        const updatedCategories = categories.map(cat =>\r\n            cat.id === id ? { ...cat, checked: !cat.checked } : cat\r\n        );\r\n        setCategories(updatedCategories);\r\n    };\r\n\r\n    const handleQuestionCountChange = (e) => {\r\n        setQuestionCount(e.target.value);\r\n    };\r\n\r\n    const updateAnswer = (qnId, optionIdx) => {\r\n        const temp = [...context.selectedOptions];\r\n        const index = temp.findIndex(item => item.qnId === qnId);\r\n        if (index !== -1) {\r\n            temp[index].selected = optionIdx;\r\n        } else {\r\n            temp.push({\r\n                qnId,\r\n                selected: optionIdx\r\n            });\r\n        }\r\n    \r\n        // Treat unanswered questions as incorrect when moving to the next question\r\n        if (qnIndex < questionCount - 1) {\r\n            if (temp[index]?.selected === null) {\r\n                // If the question is unanswered, mark it as incorrect\r\n                temp[index].selected = -1;\r\n            }\r\n            setContext({ selectedOptions: [...temp] });\r\n            setQnIndex(qnIndex + 1);\r\n        } else {\r\n            // Add skipped questions to selectedOptions state\r\n            for (let i = qnIndex + 1; i < questionCount; i++) {\r\n                temp.push({\r\n                    qnId: qns[i].qnId,\r\n                    selected: -1 // Mark as unanswered\r\n                });\r\n            }\r\n            setContext({ selectedOptions: [...temp], timeTaken });\r\n            navigate(\"/result\");\r\n        }\r\n    };\r\n    \r\n    const handleBack = () => {\r\n        if (qnIndex > 0) {\r\n            setQnIndex(qnIndex - 1);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setQns([]);\r\n        setQnIndex(0);\r\n        setFormSubmitted(false);\r\n        setTimeTaken(0);\r\n        setContext({\r\n            participantId: 0,\r\n            timeTaken: 0,\r\n            selectedOptions: []\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Typography variant=\"h3\" align=\"center\" gutterBottom>\r\n                Test Preparation\r\n            </Typography>\r\n            <Typography variant=\"body1\" gutterBottom>\r\n                Choose any category to prepare for your test.\r\n            </Typography>\r\n            {!formSubmitted ? (\r\n                <form onSubmit={handleFormSubmit}>\r\n                    <FormControl sx={{ m: 2 }}>\r\n                        <FormGroup>\r\n                            <FormControlLabel\r\n                                control={<Checkbox\r\n                                    checked={categories.every(cat => cat.checked)}\r\n                                    onChange={() => {\r\n                                        const allChecked = categories.every(cat => cat.checked);\r\n                                        const updatedCategories = categories.map(cat => ({ ...cat, checked: !allChecked }));\r\n                                        setCategories(updatedCategories);\r\n                                    }}\r\n                                />}\r\n                                label=\"All\"\r\n                            />\r\n                            {categories.map(cat => (\r\n                                categories.length > 0 && (\r\n                                    cat && (\r\n                                        <FormControlLabel\r\n                                            key={cat.id}\r\n                                            control={<Checkbox\r\n                                                checked={cat.checked || false}\r\n                                                onChange={() => handleCategoryChange(cat.id)}\r\n                                                disabled={categories.every(c => c && c.id !== cat.id && c.checked)}\r\n                                            />}\r\n                                            label={cat.name}\r\n                                        />\r\n                                    )\r\n                                )\r\n                            ))}\r\n                        </FormGroup>\r\n                    </FormControl>\r\n\r\n                    <FormControl sx={{ m: 2 }}>\r\n                        <TextField\r\n                            type=\"number\"\r\n                            label=\"Number of Questions\"\r\n                            value={questionCount}\r\n                            onChange={handleQuestionCountChange}\r\n                            inputProps={{ min: 1, max: 100 }}\r\n                        />\r\n                    </FormControl>\r\n                    <Button variant=\"contained\" type=\"submit\">Submit</Button>\r\n                </form>\r\n            ) : null}\r\n            {qns.length !== 0 ? (\r\n                <Card\r\n                    sx={{\r\n                        maxWidth: 640, mx: 'auto', mt: 5,\r\n                        '& .MuiCardHeader-action': { m: 0, alignSelf: 'center' }\r\n                    }}\r\n                >\r\n                    <CardHeader\r\n                        title={'Question ' + (qnIndex + 1) + ' of ' + questionCount}\r\n                        action={\r\n                            <>\r\n                                <Button variant=\"contained\" onClick={handleBack} disabled={qnIndex === 0}>Back</Button>\r\n                                <Typography>{getFormatedTime(timeTaken)}</Typography>\r\n                            </>\r\n                        }\r\n                    />\r\n                    <Box>\r\n                        <LinearProgress variant=\"determinate\" value={(qnIndex + 1) * 100 / questionCount} />\r\n                    </Box>\r\n                    {qns[qnIndex].imageName != null ? (\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            image={BASE_URL + 'Images/' + qns[qnIndex].imageName}\r\n                            sx={{ width: 'auto', m: '10px auto' }}\r\n                        />\r\n                    ) : null}\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">\r\n                            {qns[qnIndex].qnInWords}\r\n                        </Typography>\r\n                        <List>\r\n                            {qns[qnIndex].options && qns[qnIndex].options.map((item, idx) => (\r\n                                <ListItemButton\r\n                                    key={idx}\r\n                                    disableRipple\r\n                                    onClick={() => updateAnswer(qns[qnIndex].qnId, idx)}\r\n                                    sx={{\r\n                                        backgroundColor: context.selectedOptions.find(option => option.qnId === qns[qnIndex].qnId && option.selected === idx) ? '#3399FF' : 'transparent'\r\n                                    }}\r\n                                >\r\n                                    <div>\r\n                                        <b>{String.fromCharCode(65 + idx) + \" . \"}</b>{item}\r\n                                    </div>\r\n                                </ListItemButton>\r\n                            ))}\r\n                        </List>\r\n                    </CardContent>\r\n                </Card>\r\n            ) : null}\r\n        </Container>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}