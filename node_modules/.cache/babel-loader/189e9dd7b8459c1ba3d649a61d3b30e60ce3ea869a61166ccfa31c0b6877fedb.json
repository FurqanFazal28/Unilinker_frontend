{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\huzai\\\\Downloads\\\\unilinker-frontend (1)\\\\unilinker-frontend\\\\src\\\\Components\\\\Result.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Alert, Button, Card, CardContent, CardMedia, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { green, red, grey } from '@mui/material/colors';\nimport Answer from './Answer';\nimport { createAPIEndpoint, ENDPOINTS } from '../api';\nimport { getFormatedTime } from '../helper';\nimport useStateContext from '../Hooks/UseStateContext';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Result() {\n  _s();\n  const {\n    context,\n    setContext\n  } = useStateContext();\n  const [score, setScore] = useState(0);\n  const [qnAnswers, setQnAnswers] = useState([]);\n  const [showAlert, setShowAlert] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const ids = context.selectedOptions.map(x => x.qnId);\n    createAPIEndpoint(ENDPOINTS.getAnswers).post(ids).then(res => {\n      const qna = context.selectedOptions.map(selectedQn => {\n        const answerData = res.data.find(answer => answer.qnId === selectedQn.qnId);\n        return {\n          ...selectedQn,\n          ...answerData\n        };\n      });\n      setQnAnswers(qna);\n      calculateScore(qna);\n    }).catch(err => console.log(err));\n  }, [context.selectedOptions]);\n  const calculateScore = qna => {\n    let tempScore = qna.reduce((acc, curr) => {\n      // Convert answer and selected to integers for comparison\n      const answer = parseInt(curr.answer);\n      const selected = parseInt(curr.selected);\n      // Compare answer and selected\n      if (answer === selected || selected === null) {\n        return acc + 1; // Correct answer or skipped question\n      } else {\n        return acc; // Incorrect answer\n      }\n    }, 0);\n    setScore(tempScore);\n  };\n  // Calculate the maximum score based on the number of questions answered\n  const maxScore = context.selectedOptions.length;\n  const restart = () => {\n    setContext({\n      timeTaken: 0,\n      selectedOptions: [] // Reset selectedOptions state\n    });\n    navigate(\"/question\");\n  };\n  const submitScore = () => {\n    createAPIEndpoint(ENDPOINTS.participant).put(context.participantId, {\n      participantId: context.participantId,\n      score: score,\n      timeTaken: context.timeTaken\n    }).then(res => {\n      setShowAlert(true);\n      setTimeout(() => {\n        setShowAlert(false);\n      }, 4000);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 5,\n        display: 'flex',\n        width: '100%',\n        maxWidth: 640,\n        mx: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            flex: '1 0 auto',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"Test Completed!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"YOUR SCORE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              fontWeight: 600\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"span\",\n              color: green[500],\n              children: score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), \"/\", maxScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Took \", getFormatedTime(context.timeTaken) + ' mins']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            sx: {\n              mx: 1\n            },\n            size: \"small\",\n            onClick: restart,\n            children: \"Re-try\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"success\",\n            variant: \"string\",\n            sx: {\n              width: '60%',\n              m: 'auto',\n              visibility: showAlert ? 'visible' : 'hidden'\n            },\n            children: \"Score Updated.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        sx: {\n          width: 220\n        },\n        image: \"./result.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Answer, {\n      qnAnswers: qnAnswers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Result, \"LPRYg2oxVE8d2cfG/PJ2W71/tdk=\", false, function () {\n  return [useStateContext, useNavigate];\n});\n_c = Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useEffect","useState","Alert","Button","Card","CardContent","CardMedia","Typography","Box","green","red","grey","Answer","createAPIEndpoint","ENDPOINTS","getFormatedTime","useStateContext","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Result","_s","context","setContext","score","setScore","qnAnswers","setQnAnswers","showAlert","setShowAlert","navigate","ids","selectedOptions","map","x","qnId","getAnswers","post","then","res","qna","selectedQn","answerData","data","find","answer","calculateScore","catch","err","console","log","tempScore","reduce","acc","curr","parseInt","selected","maxScore","length","restart","timeTaken","submitScore","participant","put","participantId","setTimeout","children","sx","mt","display","width","maxWidth","mx","flexDirection","flexGrow","flex","textAlign","variant","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","color","size","onClick","severity","m","visibility","component","image","_c","$RefreshReg$"],"sources":["C:/Users/huzai/Downloads/unilinker-frontend (1)/unilinker-frontend/src/Components/Result.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Alert, Button, Card, CardContent, CardMedia, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { green, red, grey } from '@mui/material/colors';\r\nimport Answer from './Answer';\r\nimport { createAPIEndpoint, ENDPOINTS } from '../api';\r\nimport { getFormatedTime } from '../helper';\r\nimport useStateContext from '../Hooks/UseStateContext';\r\nimport { useNavigate } from 'react-router';\r\n\r\nexport default function Result() {\r\n    const { context, setContext } = useStateContext();\r\n    const [score, setScore] = useState(0);\r\n    const [qnAnswers, setQnAnswers] = useState([]);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const ids = context.selectedOptions.map(x => x.qnId);\r\n        createAPIEndpoint(ENDPOINTS.getAnswers)\r\n            .post(ids)\r\n            .then(res => {\r\n                const qna = context.selectedOptions.map(selectedQn => {\r\n                    const answerData = res.data.find(answer => answer.qnId === selectedQn.qnId);\r\n                    return {\r\n                        ...selectedQn,\r\n                        ...answerData\r\n                    };\r\n                });\r\n                setQnAnswers(qna);\r\n                calculateScore(qna);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [context.selectedOptions]);\r\n\r\n    const calculateScore = qna => {\r\n      let tempScore = qna.reduce((acc, curr) => {\r\n          // Convert answer and selected to integers for comparison\r\n          const answer = parseInt(curr.answer);\r\n          const selected = parseInt(curr.selected);\r\n          // Compare answer and selected\r\n          if (answer === selected || selected === null) {\r\n              return acc + 1; // Correct answer or skipped question\r\n          } else {\r\n              return acc; // Incorrect answer\r\n          }\r\n      }, 0);\r\n      setScore(tempScore);\r\n  };\r\n        // Calculate the maximum score based on the number of questions answered\r\n    const maxScore = context.selectedOptions.length;\r\n\r\n    const restart = () => {\r\n        setContext({\r\n            timeTaken: 0,\r\n            selectedOptions: [] // Reset selectedOptions state\r\n        });\r\n        navigate(\"/question\");\r\n    };\r\n\r\n    const submitScore = () => {\r\n        createAPIEndpoint(ENDPOINTS.participant)\r\n            .put(context.participantId, {\r\n                participantId: context.participantId,\r\n                score: score,\r\n                timeTaken: context.timeTaken\r\n            })\r\n            .then(res => {\r\n                setShowAlert(true);\r\n                setTimeout(() => {\r\n                    setShowAlert(false);\r\n                }, 4000);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card sx={{ mt: 5, display: 'flex', width: '100%', maxWidth: 640, mx: 'auto' }}>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', flexGrow: 1 }}>\r\n                    <CardContent sx={{ flex: '1 0 auto', textAlign: 'center' }}>\r\n                        <Typography variant=\"h4\">Test Completed!</Typography>\r\n                        <Typography variant=\"h6\">YOUR SCORE</Typography>\r\n                        <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\r\n                            <Typography variant=\"span\" color={green[500]}>\r\n                                {score}\r\n                            </Typography>/{maxScore}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">Took {getFormatedTime(context.timeTaken) + ' mins'}</Typography>\r\n\r\n                        <Button variant=\"contained\" sx={{ mx: 1 }} size=\"small\" onClick={restart}>\r\n                            Re-try\r\n                        </Button>\r\n                        <Alert\r\n                            severity=\"success\"\r\n                            variant=\"string\"\r\n                            sx={{\r\n                                width: '60%',\r\n                                m: 'auto',\r\n                                visibility: showAlert ? 'visible' : 'hidden'\r\n                            }}\r\n                        >\r\n                            Score Updated.\r\n                        </Alert>\r\n                    </CardContent>\r\n                </Box>\r\n                <CardMedia component=\"img\" sx={{ width: 220 }} image=\"./result.png\" />\r\n            </Card>\r\n            <Answer qnAnswers={qnAnswers} />\r\n        </>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}